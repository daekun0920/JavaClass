<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title></title>
<style>
   #container{
      margin : 20px;
   }
   
   .blue { color: blue; }
   .red { color: red; }
   
   .row>div{
      border:1px solid black;
   }
</style>
<!-- <link rel="stylesheet" href="css/jquery-ui.css"> --><!--JQuery UI  -->

<link rel="stylesheet" href="css/bootstrap.css">
<script src="js/jquery-1.12.4.js"></script>
<script src="js/bootstrap.js"></script>

<!-- <script src="js/jquery-ui.js"></script> --><!--JQuery UI  -->
<script>
   $(document).ready(function(){
      
      //소스 코드 예약어 강조
      //text() ; 순수 문자열로 인식
      //html() ; 태그 인식
      
      var word1 = ["private", "public", "package", "int", "this"];
      var word2 = ["\s<\s", "\s>\s", "\s>=\s", "\s<=\s", "\s==\s", "\s!=\s", "$lt;", "$gt;"];
      
      var source = $("pre.code.java").html();
      
      //source = source.replace("public", "<span class='blue'>public</span>"); //private를 찾아서 span태그를 달아줌
      //source = source.replace(/public/g, "<span class='blue'>public</span>"); //모든 public
      
      for (var i=0; i<word1.length; i++) {
         source = source.replace(eval("/" + word1[i] + "/g"), "<span class='blue'>" + word1[i] + "</span>");
      }
      
      for (var i=0; i<word2.length; i++) {
         source = source.replace(eval("/" + word2[i] + "/g"), "<span class='red'>" + word2[i] + "</span>");
      }
      
      $("pre.code.java").html(source); //덮어쓰기

   });
</script>
</head>
<body>
<!-- ex23_bootstrap.html -->
   
   <div id="container">
      
      <h2>Panel</h2>
      
      <div class="panel panel-default">
         <div class="panel-heading">Panel Heading</div>
         <div class="panel-body">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Voluptas eveniet recusandae amet iusto. Blanditiis accusantium in atque nulla a hic laudantium ducimus perferendis fugiat dignissimos maxime repudiandae magnam sequi dicta cupiditate molestiae nobis debitis asperiores modi fugit autem doloribus itaque!</div>
         <div class="panel-footer">Panel Footer</div>
      </div>   
      
      <hr>
      
      <div class="panel-group"><!-- 간격 작게 하기! -->
         <div class="panel panel-info">
            <div class="panel-heading">Panel Heading</div>
            <div class="panel-body">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Voluptas eveniet recusandae amet iusto. Blanditiis accusantium in atque nulla a hic laudantium ducimus perferendis fugiat dignissimos maxime repudiandae magnam sequi dicta cupiditate molestiae nobis debitis asperiores modi fugit autem doloribus itaque!</div>
            <div class="panel-footer">Panel Footer</div>
         </div>   
         
         <div class="panel panel-warning">
            <div class="panel-heading">Panel Heading</div>
            <div class="panel-body">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Voluptas eveniet recusandae amet iusto. Blanditiis accusantium in atque nulla a hic laudantium ducimus perferendis fugiat dignissimos maxime repudiandae magnam sequi dicta cupiditate molestiae nobis debitis asperiores modi fugit autem doloribus itaque!</div>
            <div class="panel-footer">Panel Footer</div>
         </div>  
         
         <div class="panel panel-success">
            <div class="panel-heading">Panel Heading</div>
            <div class="panel-body">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Voluptas eveniet recusandae amet iusto. Blanditiis accusantium in atque nulla a hic laudantium ducimus perferendis fugiat dignissimos maxime repudiandae magnam sequi dicta cupiditate molestiae nobis debitis asperiores modi fugit autem doloribus itaque!</div>
            <div class="panel-footer">Panel Footer</div>
         </div>  
     </div>
     
     <h2>지비 클래스 수업</h2>
     
     <div class="panel panel-default">
            <div class="panel-heading">Ex01.java</div>
            
            <div class="panel-body">Ex01의 클래스,,람다식 , lambda식,Ex01의 클래스,,람다식 , lambda식Ex01의 클래스,,람다식 , lambda식Ex01의 클래스,,람다식 , lambda식Ex01의 클래스,,람다식 , lambda식
       
       <div class="alert alert-danger"><strong>중요!!</strong>반드시 정리하세요!</div>
       
       <p> lambda식
       - 이벤트에 관련된 코드쓸때 주로 쓴다~~
       - 객체 지향 프로그래밍 코드 패턴 -> 함수 지향 프로그래밍 패턴으로 바꼈다
       - JDK 1.8 부터 지원!!
       - 익명 객체 사용!!
       - 람다식은 익명함수를 만들기 위해 사용 . 
       - 자바는 익명클래스를 사용해서 익명메소드를 만든다!
       - 람다식을 사용하면 , 익명 객체를 통해 익명함수를 만들 수 있다 -> 인터페이스 사용</p>
       
       <pre class="code java">
package com.test.lambda;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.stream.Stream;

public class Ex09 {
   
   private static String txt2 = ""; //static은 메인 타입 때문에!!
   
   public static void main(String[] args) {
      //정규식
      //m1();
      
      //m2();
      //m3();
      
      //정규식은 replace에 많이 쓰인다!!
      //m4();
      
      //m5();//유효성 검사
      //m6();
      
      m7();
   }

   private static void m7() {
      // 유효성 검사
      Scanner scan = new Scanner(System.in);
      
      //4자 ~ 12자 + 필수입력! + 영문자 , 숫자,_ 조합 +숫자로 시작 불가능!!
      System.out.print("아이디 입력 : ");
      String input = scan.nextLine();
      
      String regex = "^[A-Za-z_]\\w{3,11}$";
      
      if(Pattern.matches(regex, input)) {
         System.out.println("올바른 아이디입니다.");
      }else {
         System.out.println("4자 ~ 12자 + 필수입력! + 영문자 , 숫자,_ 조합 +숫자로 시작 불가능!!");
      }
      
            
            
      
   }

   private static void m6() {

      // 유효성 검사
      Scanner scan = new Scanner(System.in);
      
      //한글만 가능 + 2자 ~4자 + 필수입력!
      System.out.print("이름 입력 : ");
      String input = scan.nextLine();
      
      String regex = "^[가-힣]{2,4}$";
      
      if(Pattern.matches(regex, input)) {
         System.out.println("올바른 이름입니다.");
      }else {
         System.out.println("한글만 가능 + 2자 ~4자 + 필수입력!");
      }
      
      System.out.println("이름입력");
      

   }

   private static void m5() {
      // 유효성 검사
      Scanner scan = new Scanner(System.in);
      
      //숫자 사용 + 1~3자리 이내 + 필수 입력
      System.out.print("나이 입력 : ");
      String input = scan.nextLine();
      
      //^ : startWith 
      //$ : endsWith
      //방법1 : 이 방법이 더 좋다!!
      String regex = "^[0-9]{1,3}$";  //(권장!!)^[0-9] : 숫자로 시작해야한다 , 숫자로 끝나야한다 , 1~3자리여야한다
                              //이걸 써서 완전 검색을 했다 !! -> 부분검색 X
                              //유효성검사할떄 이렇게 앞뒤로 많이 붙여서 쓴다!!!!
      if(Pattern.compile(regex).matcher(input).find()) {
         System.out.println("올바른 나이 입니다.");
      }else {
         System.out.println("숫자 사용 + 1~3자리 이내 + 필수 입력");
      }
      
      
      //방법2
      String regex2 = "[0-9]{1,3}"; //부분검색
      
      if(Pattern.matches(regex2, input)) {
         System.out.println("올바른 나이 입니다.");
      }else {
         System.out.println("숫자 사용 + 1~3자리 이내 + 필수 입력");
      }
      
   }

   private static void m4() {
      String txt = "안녕하세요 홍길동 입니다. 나이는 20살입니다. 연락처는 010-2658-7894입니다. 혹시 전화를 안받으면 010-8888-7564으로 전화주세요.";
      
      String result = txt.replaceAll("\\d{3}-\\d{3,4}-\\d{4}", "***");
      System.out.println(result);
      //안녕하세요 홍길동 입니다. 나이는 20살입니다. 연락처는 ***입니다. 혹시 전화를 안받으면 ***으로 전화주세요.

      
      System.out.println();
      
      result = txt.replaceAll("\\d{3}-\\d{3,4}-\\d{4}", "☎[$0]"); //$0 : 앞에서 바꾸고 싶은 그 문자열!!
      System.out.println(result);
      //안녕하세요 홍길동 입니다. 나이는 20살입니다. 연락처는 ☎[010-2658-7894]입니다. 혹시 전화를 안받으면 ☎[010-8888-7564]으로 전화주세요.

      
      System.out.println();
      
      //$0 : 정규식으로 찾은 문자열
      //$1 : 첫번째 ()로 묶은 내용
      //$2 : 두번째 ()로 묶은 내용
      //$3 : 세번째 ()로 묶은 내용
      //$4 : 네번째 ()로 묶은 내용
      //$5 : 다섯번째 ()로 묶은 내용
      //$6 : 여섯번째 ()로 묶은 내용
      //$7 : 일곱번째 ()로 묶은 내용
      //$8 : 여덟번째 ()로 묶은 내용
      //$9 : 아홉번째 ()로 묶은 내용
      //$9 까지만 있다!!
      
      result = txt.replaceAll("(\\d{3})-\\d{3,4}-\\d{4}", "☎[$1]"); //$1 : 첫번째 괄호를 보여준다!!!
      System.out.println(result);
      //안녕하세요 홍길동 입니다. 나이는 20살입니다. 연락처는 ☎[010]입니다. 혹시 전화를 안받으면 ☎[010]으로 전화주세요.
      
      System.out.println();
      result = txt.replaceAll("(\\d{3})-(\\d{3,4})-(\\d{4})", "☎[$1 : $2 : $3]"); //$1 : 첫번째 괄호를 보여준다!!!
      System.out.println(result);
      //안녕하세요 홍길동 입니다. 나이는 20살입니다. 연락처는 ☎[010 : 2658 : 7894]입니다. 혹시 전화를 안받으면 ☎[010 : 8888 : 7564]으로 전화주세요.
      
      System.out.println();
      result = txt.replaceAll("(\\d{3})-(\\d{3,4})-\\d{4}", "☎[$1-$2-****]"); //$1 : 첫번째 괄호를 보여준다!!!
      System.out.println(result);
      //안녕하세요 홍길동 입니다. 나이는 20살입니다. 연락처는 ☎[010-2658-****]입니다. 혹시 전화를 안받으면 ☎[010-8888-****]으로 전화주세요.
      
   }
            
         
         reader.close();
         
         Pattern p = Pattern.compile("\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}");
         Matcher m = p.matcher(txt); //검색할 패턴!
         
         while(m.find()) {
            System.out.printf("INSERT INTO tbl_email VALUES ('%s')\n", m.group());
         }
         
         
         
//         Stream<String> stream = reader.lines();
//         stream.forEach(str -> txt2 += str);
//         //람다에서는 지역변수를 final선언한다!!-> 그래서 누적을 할 수 없다!!!!
//         //람다는 멤버변수는 누적을 할 수 있다!! -> 누적할때는 그다지 좋은 방법은 아니다!
         
      } catch (Exception e) {
         // TODO: handle exception
      }
      
      
      
      
   }

   private static void m2() {
      String txt = "안녕하세요 홍길동 입니다. 나이는 20살입니다. 연락처는 010-2658-7894입니다. 혹시 전화를 안받으면 010-8888-7564으로 전화주세요.";
      
      //txt에 전화번호가 들어있는지?
      Pattern p = Pattern.compile("\\d{3}-\\d{3,4}-\\d{4}"); //""안에 \하나만 들어갈 수 없어서 이스케이프 시킨것!! \\로!!
      Matcher m = p.matcher(txt);
       
//      System.out.println(m.find());//true -> 010-2658-7894
//      System.out.println(m.find());//true -> 010-8888-7564
//      System.out.println(m.find());//false
//      
      while(m.find()) { //검색 결과가 없을때까지 찾는다!
         System.out.println(m.group()); //검색 결과값을 찾아서 보여준다!
      }
      
   }

   private static void m1() {
      String txt = "안녕하세요 홍길동 입니다. 나이는 20살입니다. 연락처는 010-2658-7894입니다. 혹시 전화를 안받으면 010-8888-7564d으로 전화주세요.";
      
      //txt에 전화번호가 들어있는지?
      Pattern p = Pattern.compile("\\d{3}-\\d{3,4}-\\d{4}");
      Matcher m = p.matcher(txt);
      
      if(m.find()) { //true , false 반환!
         System.out.println("전화번호 발견");
      }else {
         System.out.println("전화번호 없음");
      }
      
      //주민번호가 있느냐?
      Pattern p1 = Pattern.compile("\\d{6}-\\d{7}");
      Matcher m1 = p1.matcher(txt);
      
      if(m1.find()) { //true , false 반환!
         System.out.println("주민번호 발견");
      }else {
         System.out.println("주민번호 없음");
      }
      
      
      
      
   }
}
       </pre>
       
       </div>
            <div class="panel-footer">Panel Footer</div>
    </div>  
         
         
        <h2>Forms</h2>
        
        <!--
         form-control
         : input, textareaa, select
         : 블럭태그(너비 100%)
      -->
         
      <form>
         <div class="form-group">
            <label for="name">이름</label>
            <input type="text" id="name" class="form-control">
         </div>
         <div class="form-group">
            <label for="id">아이디</label>
            <input type="text" id="id" class="form-control">
         </div>
         <div class="form-group">
            <label for="pw">암호</label>
            <input type="text" id="pw" class="form-control">
         </div>
         <input type="button" value="register" class="btn btn-default">
      </form>
      
      
      <h2>Forms</h2>
         
      <form class="form-inline">
         <div class="form-group">
            <label for="name">이름</label>
            <input type="text" id="name" class="form-control">
         </div>
         <div class="form-group">
            <label for="id">아이디</label>
            <input type="text" id="id" class="form-control">
         </div>
         <div class="form-group">
            <label for="pw">암호</label>
            <input type="text" id="pw" class="form-control">
         </div>
         <input type="button" value="register" class="btn btn-default">
      </form>
      
      
      <h2>Forms</h2>
         
      <form class="form-horizontal">
         <div class="form-group">
            <label for="name" class="col-sm-2">이름</label>
            <div class="col-sm-10">
               <input type="text" id="name" class="form-control">
            </div>
         </div>
         <div class="form-group">
            <label for="id" class="col-sm-2">아이디</label>
            <div class="col-sm-10">
               <input type="text" id="id" class="form-control">
            </div>
         </div>
         <div class="form-group">
            <label for="pw" class="col-sm-2">암호</label>
            <div class="col-sm-10">
               <input type="text" id="pw" class="form-control">
            </div>
         </div>
         <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
               <input type="button" value="register" class="btn btn-default">
            </div>
         </div>
      </form>
         
         
       <h2>그리드 시스템</h2>
       
       <div class="row">
  <div class="col-md-1">.col-md-1</div>
  <div class="col-md-1">.col-md-1</div>
  <div class="col-md-1">.col-md-1</div>
  <div class="col-md-1">.col-md-1</div>
  <div class="col-md-1">.col-md-1</div>
  <div class="col-md-1">.col-md-1</div>
  <div class="col-md-1">.col-md-1</div>
  <div class="col-md-1">.col-md-1</div>
  <div class="col-md-1">.col-md-1</div>
  <div class="col-md-1">.col-md-1</div>
  <div class="col-md-1">.col-md-1</div>
  <div class="col-md-1">.col-md-1</div>
</div>
<div class="row">
  <div class="col-md-8">.col-md-8</div>
  <div class="col-md-4">.col-md-4</div>
</div>
<div class="row">
  <div class="col-md-4">.col-md-4</div>
  <div class="col-md-4">.col-md-4</div>
  <div class="col-md-4">.col-md-4</div>
</div>
<div class="row">
  <div class="col-md-6">.col-md-6</div>
  <div class="col-md-6">.col-md-6</div>
</div>
     
   </div> <!-- container -->


</body>
</html>