<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- MyBatis가 사용할 모든 SQL을 저장 -->
<mapper namespace="test">
	<!-- 
	<insert id=""></insert>
	<update id=""></update>
	<delete id=""></delete>
	<select id=""></select>
	-->
	
	<update id="m1">update tblMyBatis set num = num + 1</update>
	
	<update id="m2" parameterType="Integer">
		update tblMyBatis set num = num - 1
			where seq = #{seq}
	</update>
	
	<update id="m3" parameterType="String">
		update tblMyBatis set txt= #{txt}
			where seq = 1
	</update>
	
	
	<!-- mapper 에서 다중 레코드인지 단일 레코드인지 구별할 수 있게 한다. -->
	<insert id="m4" parameterType="com.test.spring.MyBatisDTO">
		insert into tblMyBatis (seq, num, txt)
			values (mybatis_seq.nextval, #{num}, #{txt}) <!-- el과 비슷한 표현으로 #{} 사이의 값을 넘어줌 -->
	</insert>
	
	
	<insert id="m5" parameterType="map"> <!-- HashMap alias -->
		insert into tblMyBatis (seq, num, txt)
			values (mybatis_seq.nextval, #{num}, #{txt})
	</insert>
	
	<select id = "m7" resultType = "Integer">
		select sum(num) FROM tblMyBatis
	</select>
	
	<select id = "m8" resultType = "mdto">
		select num * 2 as num, txt from tblMyBatis WHERE num = (SELECT max(num) FROM tblMyBatis) AND rownum = 1
	</select>
	
	<!-- resultType은 레코드 갯수와 상관없이 1개의 레코드의 타입만 가지고 정한다. -->
	<select id = "m9" resultType = "String">
		SELECT txt FROM tblMyBatis
	</select>
	
	<select id = "m10" resultType = "mdto">
		select * from tblMyBatis
	</select>
	
	<select id = "m11" resultType = "mdto" parameterType = "String">
		<!-- 
		
		#{} : 데이터 바인딩 -> 오라클 데이터 전용
		${} : 구문 바인딩 -> 오브젝트 식별자 전용(테이블명, 컬럼명)
		
		-->
		select * from tblMyBatis 
		
		
		<!-- MyBatis의 동적 쿼리 -->
		<if test="_parameter.equals('asc')">
		ORDER BY seq ASC
		</if>
		<if test="_parameter.equals('desc')">
		ORDER BY seq DESC
		</if>
		
		
	</select>
	
</mapper>


